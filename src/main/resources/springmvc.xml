<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
           xmlns:context="http://www.springframework.org/schema/context"
           xmlns:aop="http://www.springframework.org/schema/aop"
           xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
            http://www.springframework.org/schema/mvc
            http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-3.2.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

        <!-- controller配置 -->
        <!-- 启动扫描所有的controller -->
        <context:component-scan base-package="spring*"/>

        <!--  主要作用于@Controller，激活该模式

            下面是一种简写形式，完全可以手动配置替代这种简写形式；
             它会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean,
               是spring MVC为@Controllers分发请求所必须的
         -->
        <mvc:annotation-driven/>

        <!-- 配置js，css等静态文件直接映射到对应的文件夹，不被DispatcherServlet处理 -->
        <mvc:default-servlet-handler/>

        <!--1、dispatcher已经在web.xml里面配置-->


        <!--2、处理器映射器HandlerMapping-->
        <!-- 根据bean的name进行查找Handler 将action的url配置在bean的name中 -->
        <!--
        BeanNameUrlHandlerMapping：表示将定义的Bean名字作为请求的url，
        需要将编写的controller在spring容器中进行配置，且指定bean的name为请求的url。
        -->
        <bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping" />
        <!--3、处理器适配器HandlerAdapter-->
        <!--
        SimpleControllerHandlerAdapter：即简单控制器处理适配器，
        所有实现了org.springframework.web.servlet.mvc.Controller 接口的Bean作为
        Springmvc的后端控制器。
        -->
        <bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"/>
        <!--4、视图解析器ViewResolver-->
        <!--
            InternalResourceViewResolver：支持JSP视图解析
        viewClass：JstlView表示JSP模板页面需要使用JSTL标签库，所以classpath中必须包含jstl的相关jar 包；
        prefix 和suffix：查找视图页面的前缀和后缀，最终视图的址为：
        前缀+逻辑视图名+后缀，逻辑视图名需要在controller中返回ModelAndView指定，比如逻辑视图名为hello，
        则最终返回的jsp视图地址 “pages/jsp/helloSb.jsp”
        -->
        <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
            <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
            <property name="prefix" value="/pages/jsp/"/>
            <property name="suffix" value=".jsp"/>
        </bean>
        <!--5、视图view与hanlder需要自己实现-->

</beans>